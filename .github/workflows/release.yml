name: release

on:
  push:
    branches: 
      - "feature/docker"
    tags:
      - "v*.*.*"

jobs:
  release:
    name: build and release yuki
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-latest]
    steps:
      - name: Check out Repo
        uses: actions/checkout@v2
      
      - name: Get Version
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      
      - name: Install Node.js
        uses: actions/setup-node@v2-beta
        id: node

      - name: Install golang 1.16
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
        id: go
      
      - name: Build Windows App
        if: matrix.os == 'windows-2019'
        run: |
          cd web && yarn && yarn build
          cd .. && CGO_ENABLE=0 GOOS=windows GOARCH=amd64 go build -mod=vendor -a -ldflags ' -extldflags "-static"' -o release/yuki_win_x86-64.exe
      
      - name: Build Linux App
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd web && yarn && yarn build
          cd .. && CGO_ENABLE=0 GOOS=linux GOARCH=amd64 go build -mod=vendor -a -ldflags ' -extldflags "-static"' -o release/yuki_linux_x86-64

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: release
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "release/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    